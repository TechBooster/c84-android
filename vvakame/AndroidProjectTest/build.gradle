import java.io.File;

buildscript {
	repositories { mavenCentral() }
	dependencies { classpath 'com.android.tools.build:gradle:0.5.1' }
}

apply plugin: 'java'
apply plugin: 'eclipse'

dependencies {
}

sourceCompatibility = 1.6
targetCompatibility = 1.6

ext { generatedSrc = "gen" }

repositories { mavenCentral() }


// for eclipse
sourceSets {
	main {
		java { srcDirs 'src', generatedSrc }
		output.classesDir = "bin/classes"
	}
}

task copyDependenciesToAndroidLibs(type: Copy) {
	into "libs"
	from configurations.compile

	eclipseJdt.dependsOn copyDependenciesToAndroidLibs
}

task cleanDependenciesToAndroidLibs() {
	delete "libs"
	delete ".settings"

	cleanEclipseJdt.dependsOn cleanDependenciesToAndroidLibs
}

eclipse {
	project {
		name = 'AndroidProjectTest'
		natures = [
			'com.android.ide.eclipse.adt.AndroidNature',
			'org.eclipse.jdt.core.javanature'
		]
		buildCommands.clear()
		[
			'com.android.ide.eclipse.adt.ResourceManagerBuilder',
			'com.android.ide.eclipse.adt.PreCompilerBuilder',
			'org.eclipse.jdt.core.javabuilder',
			'com.android.ide.eclipse.adt.ApkBuilder'
		].each { buildCommand it }
	}
	classpath {
		containers.clear()
		containers 'com.android.ide.eclipse.adt.ANDROID_FRAMEWORK', 'com.android.ide.eclipse.adt.LIBRARIES', 'com.android.ide.eclipse.adt.DEPENDENCIES'

		file {
			withXml {
				def node = it.asNode()
				node.appendNode('classpathentry', [kind: 'src', combineaccessrules: 'false', path: '/AndroidProject'])
			}
		}

		downloadSources = true
		downloadJavadoc = true
	}
}

